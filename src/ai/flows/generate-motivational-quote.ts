'use server';

/**
 * @fileOverview AI flow to generate a daily motivational quote.
 *
 * - generateMotivationalQuote - A function that generates a motivational quote.
 * - GenerateMotivationalQuoteInput - The input type for the generateMotivationalQuote function (empty).
 * - GenerateMotivationalQuoteOutput - The return type for the generateMotivationalQuote function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GenerateMotivationalQuoteInputSchema = z.object({});
export type GenerateMotivationalQuoteInput = z.infer<typeof GenerateMotivationalQuoteInputSchema>;

const GenerateMotivationalQuoteOutputSchema = z.object({
  quote: z.string().describe('A motivational quote generated by the AI.'),
});
export type GenerateMotivationalQuoteOutput = z.infer<typeof GenerateMotivationalQuoteOutputSchema>;

export async function generateMotivationalQuote(
  input: GenerateMotivationalQuoteInput
): Promise<GenerateMotivationalQuoteOutput> {
  return generateMotivationalQuoteFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateMotivationalQuotePrompt',
  input: {
    schema: z.object({}),
  },
  output: {
    schema: z.object({quote: z.string().describe('A motivational quote.')}),
  },
  prompt: `You are a motivational speaker. Generate a unique motivational quote to inspire and uplift the user. The quote should be no more than 20 words.`,
});

const generateMotivationalQuoteFlow = ai.defineFlow<
  typeof GenerateMotivationalQuoteInputSchema,
  typeof GenerateMotivationalQuoteOutputSchema
>({
  name: 'generateMotivationalQuoteFlow',
  inputSchema: GenerateMotivationalQuoteInputSchema,
  outputSchema: GenerateMotivationalQuoteOutputSchema,
},
async input => {
  const {output} = await prompt(input);
  return output!;
});
